<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>GIT基本命令</title>
    <link href="/2022/05/07/GIT%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/"/>
    <url>/2022/05/07/GIT%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<ul><li>git clone xxxxx   克隆代码</li><li>git add .    将代码放到暂存区</li><li>git commit -m “提交信息”</li><li>git push -u origin master   将代码提交到远程仓库</li><li>git branch 查看当前分支</li><li>git branch zhangsan  创建新的分支zhangsan</li><li>git log 提交日志</li><li>git checkout zhangsan 切换为zhangsan分支</li><li>git pull origin master 拉取最新代码</li><li>git reset –hard HEAD^ 版本回退 <del>（^表示回退到上一个版本，^^表示回退到上上一个版本，以此类推）</del>，如果要回退到前100个版本，这种方法肯定行不通，可以使用 <del>git reset –hard HEAD~100</del></li><li>git merge 分支名  和某个分支进行合并</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hibernate</title>
    <link href="/2022/05/07/Hibernate/"/>
    <url>/2022/05/07/Hibernate/</url>
    
    <content type="html"><![CDATA[<h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><p>1、导入相关依赖</p><p>2、创建 Hibernate 配置文件</p><p>3、创建实体类</p><p>4、创建实体类–关系映射文件</p><p>5、调用 Hibernate API 完成操作</p><h2 id="具体操作"><a href="#具体操作" class="headerlink" title="具体操作"></a>具体操作</h2><h3 id="1、创建Maven工程，pom-xml"><a href="#1、创建Maven工程，pom-xml" class="headerlink" title="1、创建Maven工程，pom.xml"></a>1、创建Maven工程，pom.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--MySQL--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>mysql<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mysql-connector-java<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>5.1.48<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-comment">&lt;!--Hibernate--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.hibernate<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>hibernate-core<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>5.4.10.Final<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="2、创建配置文件-hibernate-cfg-xml"><a href="#2、创建配置文件-hibernate-cfg-xml" class="headerlink" title="2、创建配置文件  hibernate.cfg.xml"></a>2、创建配置文件  hibernate.cfg.xml</h3><p>核心配置：session-factory</p><p>SessionFactory：针对单个数据库映射经过编译的内存镜像文件，将数据库转化为一个java可以是别的镜像文件</p><p>构建SessionFactory非常耗费资源，所以通常一个工厂只需要创建一个SessionFactory。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">hibernate-configuration</span> <span class="hljs-keyword">PUBLIC</span></span><br><span class="hljs-meta">        <span class="hljs-string">&quot;-//Hibernate/Hibernate Configuration DTD 3.0//EN&quot;</span></span><br><span class="hljs-meta">        <span class="hljs-string">&quot;http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hibernate-configuration</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">session-factory</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--数据源配置--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;connection.username&quot;</span>&gt;</span>root<span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;connection.password&quot;</span>&gt;</span>123.com<span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;connection.driver_class&quot;</span>&gt;</span>com.mysql.jdbc.Driver<span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;connection.url&quot;</span>&gt;</span>jdbc:mysql://localhost:3307/bdqn?useUnicode=true<span class="hljs-symbol">&amp;amp;</span>characterEncoding=utf-8<span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--连接池 C3P0 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hibernate.c3p0.acquire_increment&quot;</span>&gt;</span>10<span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hibernate.c3p0.idle_test_period&quot;</span>&gt;</span>10000<span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hibernate.c3p0.timeout&quot;</span>&gt;</span>5000<span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hibernate.c3p0.max_size&quot;</span>&gt;</span>30<span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hibernate.c3p0.min_size&quot;</span>&gt;</span>5<span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hibernate.c3p0.max_statements&quot;</span>&gt;</span>10<span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--数据库方言 MySQL--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hibernate.dialect&quot;</span>&gt;</span>org.hibernate.dialect.MySQLDialect<span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--打印sql语句--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;show_sql&quot;</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--格式化sql--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;format_sql&quot;</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--是否自动生成数据表--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hibernate.hbm2ddl.auto&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">session-factory</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">hibernate-configuration</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="3、创建实体类"><a href="#3、创建实体类" class="headerlink" title="3、创建实体类"></a>3、创建实体类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kai.pojo;<br><br><span class="hljs-keyword">import</span> lombok.Data;<br><br><span class="hljs-keyword">import</span> java.util.Set;<br><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Customer</span> &#123;<br>    <span class="hljs-keyword">private</span> Integer id;<br>    <span class="hljs-keyword">private</span> String name;<br>    <span class="hljs-keyword">private</span> Set&lt;Orders&gt; orders;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kai.pojo;<br><br><span class="hljs-keyword">import</span> lombok.Data;<br><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Orders</span> &#123;<br>    <span class="hljs-keyword">private</span> Integer id;<br>    <span class="hljs-keyword">private</span> String name;<br>    <span class="hljs-keyword">private</span> Customer customer;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4、创建实体关系映射文件-xxx-hbm-xml"><a href="#4、创建实体关系映射文件-xxx-hbm-xml" class="headerlink" title="4、创建实体关系映射文件  xxx.hbm.xml"></a>4、创建实体关系映射文件  xxx.hbm.xml</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kai.pojo;<br><br><span class="hljs-keyword">import</span> lombok.Data;<br><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">People</span> &#123;<br>    <span class="hljs-keyword">private</span> Integer id;<br>    <span class="hljs-keyword">private</span> String name;<br>    <span class="hljs-keyword">private</span> Double money;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/skaifeng/picgo/raw/master/img/202111041149864.png" alt="image-20211012100034839"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">hibernate-mapping</span> <span class="hljs-keyword">PUBLIC</span></span><br><span class="hljs-meta">        <span class="hljs-string">&quot;-//Hibernate/Hibernate Mapping DTD//EN&quot;</span></span><br><span class="hljs-meta">        <span class="hljs-string">&quot;http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hibernate-mapping</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">class</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;com.kai.pojo.People&quot;</span> <span class="hljs-attr">table</span>=<span class="hljs-string">&quot;people&quot;</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--主键映射--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">id</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;id&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;java.lang.Integer&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">column</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;id&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">column</span>&gt;</span><br>            <span class="hljs-comment">&lt;!--自增--&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">generator</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;identity&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">generator</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;name&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;java.lang.String&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">column</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;name&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">column</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;money&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;java.lang.Double&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">column</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;money&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">column</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">class</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">hibernate-mapping</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="5、实体关系映射文件需要注册到-Hibernate-配置文件中"><a href="#5、实体关系映射文件需要注册到-Hibernate-配置文件中" class="headerlink" title="5、实体关系映射文件需要注册到 Hibernate 配置文件中"></a>5、实体关系映射文件需要注册到 Hibernate 配置文件中</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--注册实体关系映射文件--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mapping</span> <span class="hljs-attr">resource</span>=<span class="hljs-string">&quot;com/kai/pojo/People.hbm.xml&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mapping</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="6、使用-Hibernate-API-完成数据操作"><a href="#6、使用-Hibernate-API-完成数据操作" class="headerlink" title="6、使用 Hibernate API 完成数据操作"></a>6、使用 Hibernate API 完成数据操作</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kai.test;<br><br><span class="hljs-keyword">import</span> com.kai.pojo.People;<br><span class="hljs-keyword">import</span> org.hibernate.Session;<br><span class="hljs-keyword">import</span> org.hibernate.SessionFactory;<br><span class="hljs-keyword">import</span> org.hibernate.cfg.Configuration;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Test</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">// 创建Configuration</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">configuration</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>().configure();<br>        <span class="hljs-comment">// 获取sessionFactory</span><br>        <span class="hljs-type">SessionFactory</span> <span class="hljs-variable">sessionFactory</span> <span class="hljs-operator">=</span> configuration.buildSessionFactory();<br>        <span class="hljs-comment">// 获取Session对象</span><br>        <span class="hljs-type">Session</span> <span class="hljs-variable">session</span> <span class="hljs-operator">=</span> sessionFactory.openSession();<br>        <span class="hljs-type">People</span> <span class="hljs-variable">people</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">People</span>();<br>        people.setName(<span class="hljs-string">&quot;张三&quot;</span>);<br>        people.setMoney(<span class="hljs-number">1000.0</span>);<br>        session.save(people);<br>        session.beginTransaction().commit();<br>        session.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="7、pom-xml中需要配置resource"><a href="#7、pom-xml中需要配置resource" class="headerlink" title="7、pom.xml中需要配置resource"></a>7、pom.xml中需要配置resource</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">build</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">resources</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">resource</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">directory</span>&gt;</span>src/main/java<span class="hljs-tag">&lt;/<span class="hljs-name">directory</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">includes</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">include</span>&gt;</span>**/*.xml<span class="hljs-tag">&lt;/<span class="hljs-name">include</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">includes</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">resource</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">resources</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">build</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="Hibernate级联操作"><a href="#Hibernate级联操作" class="headerlink" title="Hibernate级联操作"></a>Hibernate级联操作</h2><p><strong>1、一对多关系</strong></p><p>客户和订单：每个客户可以生成多个订单，但是一个订单只能属于一个客户，客户是一，订单是多</p><p><img src="https://gitee.com/skaifeng/picgo/raw/master/img/202111041150885.png" alt="image-20211012102207503"></p><p>数据库中一的一方是主表，多的一方是从表，通过主外键关系来维护</p><p><strong>2、多对多关系</strong></p><p>学生选课：一门课程可以被多个学生选择，一个学生可以选择多门课程，学生是多，课程也是多。</p><p>数据库中是通过两个一对多关系来维护的，学生和课程都是主表，额外增加一张中间表作为从表，两张主表和中间表都是一对多关系</p><p><img src="https://gitee.com/skaifeng/picgo/raw/master/img/202111041150707.png" alt="image-20211012102824457"></p><p>Java和数据库对于这两种关系的体现完全是两种不同的方式，Hibernate 框架的作用就是将这两种方式进行转换和映射。</p><h3 id="Hibernate-实现一对多"><a href="#Hibernate-实现一对多" class="headerlink" title="Hibernate 实现一对多"></a>Hibernate 实现一对多</h3><p><strong>Customer</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">hibernate-mapping</span> <span class="hljs-keyword">PUBLIC</span></span><br><span class="hljs-meta">        <span class="hljs-string">&quot;-//Hibernate/Hibernate Mapping DTD//EN&quot;</span></span><br><span class="hljs-meta">        <span class="hljs-string">&quot;http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hibernate-mapping</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">class</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;com.kai.pojo.Customer&quot;</span> <span class="hljs-attr">table</span>=<span class="hljs-string">&quot;customer&quot;</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--主键映射--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">id</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;id&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;java.lang.Integer&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">column</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;id&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">column</span>&gt;</span><br>            <span class="hljs-comment">&lt;!--自增--&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">generator</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;identity&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">generator</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;name&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;java.lang.String&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">column</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;name&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">column</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">set</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;orders&quot;</span> <span class="hljs-attr">table</span>=<span class="hljs-string">&quot;orders&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">key</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;cid&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">key</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">one-to-many</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.kai.pojo.Orders&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">one-to-many</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">set</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">class</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">hibernate-mapping</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>set 标签来配置实体类中的集合属性 orders</li><li>name 实体类中的属性名</li><li>table 表名</li><li>key 外键</li><li>one-to-many 与集合泛型的实体类对应</li></ul><p><strong>Orders</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">hibernate-mapping</span> <span class="hljs-keyword">PUBLIC</span></span><br><span class="hljs-meta">        <span class="hljs-string">&quot;-//Hibernate/Hibernate Mapping DTD//EN&quot;</span></span><br><span class="hljs-meta">        <span class="hljs-string">&quot;http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hibernate-mapping</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">class</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;com.kai.pojo.Orders&quot;</span> <span class="hljs-attr">table</span>=<span class="hljs-string">&quot;orders&quot;</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--主键映射--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">id</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;id&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;java.lang.Integer&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">column</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;id&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">column</span>&gt;</span><br>            <span class="hljs-comment">&lt;!--自增--&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">generator</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;identity&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">generator</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;name&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;java.lang.String&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">column</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;name&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">column</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">many-to-one</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;customer&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.kai.pojo.Customer&quot;</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;cid&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">many-to-one</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">class</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">hibernate-mapping</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>many-to-one  配置实体类对应的对象属性</li><li>name  属性名</li><li>class  属性对应的类</li><li>column  外键</li></ul><p><strong>需要在 Hibernate 配置文件中进行注册</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--注册实体关系映射文件--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mapping</span> <span class="hljs-attr">resource</span>=<span class="hljs-string">&quot;com/kai/pojo/Customer.hbm.xml&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mapping</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mapping</span> <span class="hljs-attr">resource</span>=<span class="hljs-string">&quot;com/kai/pojo/Orders.hbm.xml&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mapping</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>Hibernate API 调用</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kai.test;<br><br><span class="hljs-keyword">import</span> com.kai.pojo.Customer;<br><span class="hljs-keyword">import</span> com.kai.pojo.Orders;<br><span class="hljs-keyword">import</span> org.hibernate.Session;<br><span class="hljs-keyword">import</span> org.hibernate.SessionFactory;<br><span class="hljs-keyword">import</span> org.hibernate.cfg.Configuration;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Test2</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">// 创建Configuration</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">configuration</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>().configure();<br>        <span class="hljs-comment">// 获取SessionFactory</span><br>        <span class="hljs-type">SessionFactory</span> <span class="hljs-variable">sessionFactory</span> <span class="hljs-operator">=</span> configuration.buildSessionFactory();<br>        <span class="hljs-comment">// 获取Session</span><br>        <span class="hljs-type">Session</span> <span class="hljs-variable">session</span> <span class="hljs-operator">=</span> sessionFactory.openSession();<br>        <span class="hljs-comment">// 创建Customer对象</span><br>        <span class="hljs-type">Customer</span> <span class="hljs-variable">customer</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Customer</span>();<br>        customer.setName(<span class="hljs-string">&quot;张三&quot;</span>);<br><br>        <span class="hljs-comment">//创建Orders对象</span><br>        <span class="hljs-type">Orders</span> <span class="hljs-variable">orders</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Orders</span>();<br>        orders.setName(<span class="hljs-string">&quot;订单1&quot;</span>);<br><br>        <span class="hljs-comment">//建立关联关系</span><br>        orders.setCustomer(customer);<br><br>        <span class="hljs-comment">//保存</span><br>        session.save(customer);<br>        session.save(orders);<br>        <span class="hljs-comment">//提交事务</span><br>        session.beginTransaction().commit();<br>        session.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="Hibernate-实现多对多"><a href="#Hibernate-实现多对多" class="headerlink" title="Hibernate 实现多对多"></a>Hibernate 实现多对多</h3><p><strong>Account</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">hibernate-mapping</span> <span class="hljs-keyword">PUBLIC</span></span><br><span class="hljs-meta">        <span class="hljs-string">&quot;-//Hibernate/Hibernate Mapping DTD//EN&quot;</span></span><br><span class="hljs-meta">        <span class="hljs-string">&quot;http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hibernate-mapping</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">class</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;com.kai.pojo.Account&quot;</span> <span class="hljs-attr">table</span>=<span class="hljs-string">&quot;t_account&quot;</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--主键映射--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">id</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;id&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;java.lang.Integer&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">column</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;id&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">column</span>&gt;</span><br>            <span class="hljs-comment">&lt;!--自增--&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">generator</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;identity&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">generator</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;name&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;java.lang.String&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">column</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;name&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">column</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">set</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;courses&quot;</span> <span class="hljs-attr">table</span>=<span class="hljs-string">&quot;account_course&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">key</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;aid&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">key</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">many-to-many</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.kai.pojo.Course&quot;</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;cid&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">many-to-many</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">set</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">class</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">hibernate-mapping</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>Course</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">hibernate-mapping</span> <span class="hljs-keyword">PUBLIC</span></span><br><span class="hljs-meta">        <span class="hljs-string">&quot;-//Hibernate/Hibernate Mapping DTD//EN&quot;</span></span><br><span class="hljs-meta">        <span class="hljs-string">&quot;http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hibernate-mapping</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">class</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;com.kai.pojo.Course&quot;</span> <span class="hljs-attr">table</span>=<span class="hljs-string">&quot;t_course&quot;</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--主键映射--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">id</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;id&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;java.lang.Integer&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">column</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;id&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">column</span>&gt;</span><br>            <span class="hljs-comment">&lt;!--自增--&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">generator</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;identity&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">generator</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;name&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;java.lang.String&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">column</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;name&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">column</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">set</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;accounts&quot;</span> <span class="hljs-attr">table</span>=<span class="hljs-string">&quot;account_course&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">key</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;cid&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">key</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">many-to-many</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.kai.pojo.Account&quot;</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;aid&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">many-to-many</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">set</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">class</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">hibernate-mapping</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>name  实体类对应的集合属性名</li><li>table  中间表名</li><li>key  外键</li><li>many-to-many  集合泛型的实体类对应</li><li>column  属性与中间表的外键字段名对应</li></ul><p><strong>注册到 Hibernate 配置文件中</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--注册实体关系映射文件--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mapping</span> <span class="hljs-attr">resource</span>=<span class="hljs-string">&quot;com/kai/pojo/Account.hbm.xml&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mapping</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mapping</span> <span class="hljs-attr">resource</span>=<span class="hljs-string">&quot;com/kai/pojo/Course.hbm.xml&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mapping</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>Hibernate API 调用</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kai.test;<br><br><span class="hljs-keyword">import</span> com.kai.pojo.Account;<br><span class="hljs-keyword">import</span> com.kai.pojo.Course;<br><span class="hljs-keyword">import</span> org.hibernate.Session;<br><span class="hljs-keyword">import</span> org.hibernate.SessionFactory;<br><span class="hljs-keyword">import</span> org.hibernate.cfg.Configuration;<br><br><span class="hljs-keyword">import</span> java.util.HashSet;<br><span class="hljs-keyword">import</span> java.util.Set;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Test3</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">// 创建Configuration</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">configuration</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>().configure();<br>        <span class="hljs-comment">// 获取SessionFactory</span><br>        <span class="hljs-type">SessionFactory</span> <span class="hljs-variable">sessionFactory</span> <span class="hljs-operator">=</span> configuration.buildSessionFactory();<br>        <span class="hljs-comment">// 获取Session</span><br>        <span class="hljs-type">Session</span> <span class="hljs-variable">session</span> <span class="hljs-operator">=</span> sessionFactory.openSession();<br><br>        <span class="hljs-type">Course</span> <span class="hljs-variable">course</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Course</span>();<br>        course.setName(<span class="hljs-string">&quot;Java&quot;</span>);<br>        <span class="hljs-type">Account</span> <span class="hljs-variable">account</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Account</span>();<br>        account.setName(<span class="hljs-string">&quot;张三&quot;</span>);<br><br>        <span class="hljs-comment">//建立关联关系</span><br>        Set&lt;Course&gt; courses = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashSet</span>&lt;Course&gt;();<br>        courses.add(course);<br><br>        account.setCourses(courses);<br><br>        session.save(course);<br>        session.save(account);<br>        session.beginTransaction().commit();<br>        session.close();<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Hibernate-延迟加载"><a href="#Hibernate-延迟加载" class="headerlink" title="Hibernate 延迟加载"></a>Hibernate 延迟加载</h2><p>延迟加载、惰性加载、懒加载</p><p>使用延迟加载可以提高程序的运行效率，Java程序与数据库的交互频次越低，程序运行的效率越高，所以我们应该尽量减少Java程序与数据库的交互次数，Hibernate  延迟加载就很好的做到了这一点。</p><p>客户和订单，当我们查询客户对象的时候，因为有级联设置，所以会将对应的订单信息一并查出，这样的话就需要发送两条SQL语句，分别查询客户信息和订单信息。</p><p>延迟加载的思路是：当我们查询客户的时候，如果没有访问订单数据的话，那么就只发送一条SQL语句，来查询客户信息，如果需要访问订单数据的时候，则发送两条SQL。</p><p>延迟加载可以看做是一种优化机制，根据具体的需求，自动选择SQL语句数量。</p><h3 id="一对多"><a href="#一对多" class="headerlink" title="一对多"></a>一对多</h3><p>1、查询 Customer，对 Orders 进行延迟加载设置，在 Customer.hbm.xml 中进行设置，延迟加载默认开启。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">set</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;orders&quot;</span> <span class="hljs-attr">table</span>=<span class="hljs-string">&quot;orders&quot;</span> <span class="hljs-attr">lazy</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">key</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;cid&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">key</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">one-to-many</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.kai.pojo.Orders&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">one-to-many</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">set</span>&gt;</span><br></code></pre></td></tr></table></figure><p>2、查询 Customer</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/181/202205071614703.png" alt="image-20211012115423449"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kai.test;<br><br><span class="hljs-keyword">import</span> com.kai.pojo.Customer;<br><span class="hljs-keyword">import</span> org.hibernate.Session;<br><span class="hljs-keyword">import</span> org.hibernate.SessionFactory;<br><span class="hljs-keyword">import</span> org.hibernate.cfg.Configuration;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Test4</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">// 创建Configuration</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">configuration</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>().configure();<br>        <span class="hljs-comment">// 获取SessionFactory</span><br>        <span class="hljs-type">SessionFactory</span> <span class="hljs-variable">sessionFactory</span> <span class="hljs-operator">=</span> configuration.buildSessionFactory();<br>        <span class="hljs-comment">// 获取Session</span><br>        <span class="hljs-type">Session</span> <span class="hljs-variable">session</span> <span class="hljs-operator">=</span> sessionFactory.openSession();<br><br>        <span class="hljs-type">Customer</span> <span class="hljs-variable">customer</span> <span class="hljs-operator">=</span> session.get(Customer.class,<span class="hljs-number">5</span>);<br>        System.out.println(customer);<br>        session.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>3、查询 Orders</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/181/202205071614722.png" alt="image-20211012115505902"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kai.test;<br><br><span class="hljs-keyword">import</span> com.kai.pojo.Customer;<br><span class="hljs-keyword">import</span> org.hibernate.Session;<br><span class="hljs-keyword">import</span> org.hibernate.SessionFactory;<br><span class="hljs-keyword">import</span> org.hibernate.cfg.Configuration;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Test4</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">// 创建Configuration</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">configuration</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>().configure();<br>        <span class="hljs-comment">// 获取SessionFactory</span><br>        <span class="hljs-type">SessionFactory</span> <span class="hljs-variable">sessionFactory</span> <span class="hljs-operator">=</span> configuration.buildSessionFactory();<br>        <span class="hljs-comment">// 获取Session</span><br>        <span class="hljs-type">Session</span> <span class="hljs-variable">session</span> <span class="hljs-operator">=</span> sessionFactory.openSession();<br><br>        <span class="hljs-type">Customer</span> <span class="hljs-variable">customer</span> <span class="hljs-operator">=</span> session.get(Customer.class,<span class="hljs-number">5</span>);<br>        System.out.println(customer.getOrders());<br>        session.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><del>lazy除了可以设置 true 和 false 之外，还可以设置 extra，extra 是比 true 更加懒惰的一种加载方式，或者说是更加智能的一种加载方式，通过例子看区别：</del></p><p>查询 customer 对象，打印该对象对应的 orders 集合的长度  </p><p><strong>使用 true</strong></p><p><img src="https://gitee.com/skaifeng/picgo/raw/master/img/202111041151221.png" alt="image-20211104115132145"></p><p><strong>使用 extra</strong></p><p>使用聚合函数 count 来统计，不需要封装成对象，再把对象装到集合里，在获取集合 size</p><p><img src="https://gitee.com/skaifeng/picgo/raw/master/img/202111041151892.png" alt="image-20211012120341277"></p><p><strong>也可以通过 Orders 来设置 Customer 的延迟加载，Orders.hbm.xml 中设置，lazy 默认 false</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">many-to-one</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;customer&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.kai.pojo.Customer&quot;</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;cid&quot;</span> <span class="hljs-attr">lazy</span>=<span class="hljs-string">&quot;proxy&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">many-to-one</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kai.test;<br><br><span class="hljs-keyword">import</span> com.kai.pojo.Customer;<br><span class="hljs-keyword">import</span> com.kai.pojo.Orders;<br><span class="hljs-keyword">import</span> org.hibernate.Session;<br><span class="hljs-keyword">import</span> org.hibernate.SessionFactory;<br><span class="hljs-keyword">import</span> org.hibernate.cfg.Configuration;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Test5</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">// 创建Configuration</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">configuration</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>().configure();<br>        <span class="hljs-comment">// 获取SessionFactory</span><br>        <span class="hljs-type">SessionFactory</span> <span class="hljs-variable">sessionFactory</span> <span class="hljs-operator">=</span> configuration.buildSessionFactory();<br>        <span class="hljs-comment">// 获取Session</span><br>        <span class="hljs-type">Session</span> <span class="hljs-variable">session</span> <span class="hljs-operator">=</span> sessionFactory.openSession();<br><br>        <span class="hljs-type">Orders</span> <span class="hljs-variable">orders</span> <span class="hljs-operator">=</span> session.get(Orders.class,<span class="hljs-number">8</span>);<br>        System.out.println(orders);<br>        session.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/skaifeng/picgo/raw/master/img/202111041151248.png" alt="image-20211012121548416"></p><ul><li>No-proxy : 当调用方法需要访问 customer 成员变量时，发送 SQL 语句查询Customer，否则不查询</li><li>proxy ： 无论调用的方法是否需要访问 customer 的成员变量，都会发送 SQL 语句去查询 customer </li></ul><h3 id="多对多"><a href="#多对多" class="headerlink" title="多对多"></a>多对多</h3><p>查询 Course，加载对应的Account，默认延迟加载开启</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kai.test;<br><br><span class="hljs-keyword">import</span> com.kai.pojo.Course;<br><span class="hljs-keyword">import</span> com.kai.pojo.Orders;<br><span class="hljs-keyword">import</span> org.hibernate.Session;<br><span class="hljs-keyword">import</span> org.hibernate.SessionFactory;<br><span class="hljs-keyword">import</span> org.hibernate.cfg.Configuration;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Test6</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">// 创建Configuration</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">configuration</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>().configure();<br>        <span class="hljs-comment">// 获取SessionFactory</span><br>        <span class="hljs-type">SessionFactory</span> <span class="hljs-variable">sessionFactory</span> <span class="hljs-operator">=</span> configuration.buildSessionFactory();<br>        <span class="hljs-comment">// 获取Session</span><br>        <span class="hljs-type">Session</span> <span class="hljs-variable">session</span> <span class="hljs-operator">=</span> sessionFactory.openSession();<br><br>        <span class="hljs-type">Course</span> <span class="hljs-variable">course</span> <span class="hljs-operator">=</span> session.get(Course.class,<span class="hljs-number">4</span>);<br>        System.out.println(course);<br>        session.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kai.test;<br><br><span class="hljs-keyword">import</span> com.kai.pojo.Course;<br><span class="hljs-keyword">import</span> com.kai.pojo.Orders;<br><span class="hljs-keyword">import</span> org.hibernate.Session;<br><span class="hljs-keyword">import</span> org.hibernate.SessionFactory;<br><span class="hljs-keyword">import</span> org.hibernate.cfg.Configuration;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Test6</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">// 创建Configuration</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">configuration</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>().configure();<br>        <span class="hljs-comment">// 获取SessionFactory</span><br>        <span class="hljs-type">SessionFactory</span> <span class="hljs-variable">sessionFactory</span> <span class="hljs-operator">=</span> configuration.buildSessionFactory();<br>        <span class="hljs-comment">// 获取Session</span><br>        <span class="hljs-type">Session</span> <span class="hljs-variable">session</span> <span class="hljs-operator">=</span> sessionFactory.openSession();<br><br>        <span class="hljs-type">Course</span> <span class="hljs-variable">course</span> <span class="hljs-operator">=</span> session.get(Course.class,<span class="hljs-number">4</span>);<br>        System.out.println(course.getAccounts());<br>        session.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/skaifeng/picgo/raw/master/img/202111041151189.png" alt="image-20211012152738079"></p><h2 id="Hibernate-配置文件"><a href="#Hibernate-配置文件" class="headerlink" title="Hibernate 配置文件"></a>Hibernate 配置文件</h2><ul><li><p><strong>hibernate.cfg.xml</strong></p><ul><li><p>配置 Hibernate 的全局环境</p></li><li><p>1、数据库的基本信息</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--数据源配置--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;connection.username&quot;</span>&gt;</span>root<span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;connection.password&quot;</span>&gt;</span>123.com<span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;connection.driver_class&quot;</span>&gt;</span>com.mysql.jdbc.Driver<span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;connection.url&quot;</span>&gt;</span>jdbc:mysql://localhost:3307/bdqn?useUnicode=true<span class="hljs-symbol">&amp;amp;</span>characterEncoding=utf-8<span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>2、集成 C3P0，设置数据库连接池信息</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--连接池 C3P0 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hibernate.c3p0.acquire_increment&quot;</span>&gt;</span>10<span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hibernate.c3p0.idle_test_period&quot;</span>&gt;</span>10000<span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hibernate.c3p0.timeout&quot;</span>&gt;</span>5000<span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hibernate.c3p0.max_size&quot;</span>&gt;</span>30<span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hibernate.c3p0.min_size&quot;</span>&gt;</span>5<span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hibernate.c3p0.max_statements&quot;</span>&gt;</span>10<span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>3、Hibernate 基本信息</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"> <span class="hljs-comment">&lt;!--数据库方言 MySQL--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hibernate.dialect&quot;</span>&gt;</span>org.hibernate.dialect.MySQLDialect<span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-comment">&lt;!--打印sql语句--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;show_sql&quot;</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-comment">&lt;!--格式化sql--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;format_sql&quot;</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-comment">&lt;!--是否自动生成数据表--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hibernate.hbm2ddl.auto&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br></code></pre></td></tr></table></figure><ul><li>update：动态创建表，如果表存在，则直接适用，如果不存在，则创建。</li><li>create：无论表是否存在，都会重新创建。</li><li>create-drop：初始化创建表，程序结束时删除表。</li><li>validate：效验实体关系映射文件和数据表是否对应，不能对应直接报错。</li></ul></li><li><p>4、注册实体关系映射文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--注册实体关系映射文件--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mapping</span> <span class="hljs-attr">resource</span>=<span class="hljs-string">&quot;com/kai/pojo/People.hbm.xml&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mapping</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mapping</span> <span class="hljs-attr">resource</span>=<span class="hljs-string">&quot;com/kai/pojo/Customer.hbm.xml&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mapping</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mapping</span> <span class="hljs-attr">resource</span>=<span class="hljs-string">&quot;com/kai/pojo/Orders.hbm.xml&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mapping</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mapping</span> <span class="hljs-attr">resource</span>=<span class="hljs-string">&quot;com/kai/pojo/Account.hbm.xml&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mapping</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mapping</span> <span class="hljs-attr">resource</span>=<span class="hljs-string">&quot;com/kai/pojo/Course.hbm.xml&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mapping</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ul></li><li><p><strong>hbm.xml    实体关系映射文件</strong></p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">hibernate-mapping</span> <span class="hljs-keyword">PUBLIC</span></span><br><span class="hljs-meta">        <span class="hljs-string">&quot;-//Hibernate/Hibernate Mapping DTD//EN&quot;</span></span><br><span class="hljs-meta">        <span class="hljs-string">&quot;http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hibernate-mapping</span> <span class="hljs-attr">package</span>=<span class="hljs-string">&quot;com.kai.pojo&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">class</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;Course&quot;</span> <span class="hljs-attr">table</span>=<span class="hljs-string">&quot;t_course&quot;</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--主键映射--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">id</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;id&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;java.lang.Integer&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">column</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;id&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">column</span>&gt;</span><br>            <span class="hljs-comment">&lt;!--自增--&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">generator</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;identity&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">generator</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;name&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;java.lang.String&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">column</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;name&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">column</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">set</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;accounts&quot;</span> <span class="hljs-attr">table</span>=<span class="hljs-string">&quot;account_course&quot;</span> <span class="hljs-attr">lazy</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">key</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;cid&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">key</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">many-to-many</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;Account&quot;</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;aid&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">many-to-many</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">set</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">class</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">hibernate-mapping</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="hibernate-mapping-属性"><a href="#hibernate-mapping-属性" class="headerlink" title="hibernate-mapping 属性"></a>hibernate-mapping 属性</h3><ul><li><p>package：给 class 节点对应的实体类统一设置包名，此处设置了包名，class 的 name 属性就可以省略包名</p></li><li><p>schema：数据库 schema 的名称</p></li><li><p>catalog：数据库 catalog 的名称</p></li><li><p>default-cascade：默认的级联关系，默认为 none</p></li><li><p>default-access：Hibernate 用来访问属性的策略</p></li><li><p>default-lazy：指定了未明确注明 lazy 属性的 Java 属性和集合类，Hibernate 会采用什么样的加载风格，默认为 True</p></li><li><p>auto-import：指定我们是否可以在查询语句中使用非全限定类名，默认为 True，如果项目中有两个同名的持久化类，最好在两个类的对应映射文件中配置为 false</p></li></ul><h3 id="class-属性"><a href="#class-属性" class="headerlink" title="class 属性"></a>class 属性</h3><ul><li>name：实体类名</li><li>table：数据表名</li><li>schema：数据库 schema 的名称，会覆盖 hibernate-mapping 的 schema</li><li>catalog：数据库 catalog 的名称，会覆盖 hibernate-mapping 的 catalog </li><li>proxy：指定一个接口，在延迟加载时作为代理使用</li><li>dynamic-update：动态更新</li><li>dynamic-insert：动态添加</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kai.test;<br><br><span class="hljs-keyword">import</span> com.kai.pojo.People;<br><span class="hljs-keyword">import</span> org.hibernate.Session;<br><span class="hljs-keyword">import</span> org.hibernate.SessionFactory;<br><span class="hljs-keyword">import</span> org.hibernate.cfg.Configuration;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Test7</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">// 创建Configuration</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">configuration</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>().configure();<br>        <span class="hljs-comment">// 获取SessionFactory</span><br>        <span class="hljs-type">SessionFactory</span> <span class="hljs-variable">sessionFactory</span> <span class="hljs-operator">=</span> configuration.buildSessionFactory();<br>        <span class="hljs-comment">// 获取Session</span><br>        <span class="hljs-type">Session</span> <span class="hljs-variable">session</span> <span class="hljs-operator">=</span> sessionFactory.openSession();<br><br>        <span class="hljs-type">People</span> <span class="hljs-variable">people</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">People</span>();<br>        people.setName(<span class="hljs-string">&quot;张三&quot;</span>);<br><br>        session.save(people);<br>        session.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/skaifeng/picgo/raw/master/img/202111041152738.png" alt="image-20211012184048229"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">class</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;com.kai.pojo.People&quot;</span> <span class="hljs-attr">table</span>=<span class="hljs-string">&quot;people&quot;</span> <span class="hljs-attr">dynamic-insert</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/skaifeng/picgo/raw/master/img/202111041152960.png" alt="image-20211012184234361"></p><p>动态修改</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kai.test;<br><br><span class="hljs-keyword">import</span> com.kai.pojo.People;<br><span class="hljs-keyword">import</span> org.hibernate.Session;<br><span class="hljs-keyword">import</span> org.hibernate.SessionFactory;<br><span class="hljs-keyword">import</span> org.hibernate.cfg.Configuration;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Test7</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">// 创建Configuration</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">configuration</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>().configure();<br>        <span class="hljs-comment">// 获取SessionFactory</span><br>        <span class="hljs-type">SessionFactory</span> <span class="hljs-variable">sessionFactory</span> <span class="hljs-operator">=</span> configuration.buildSessionFactory();<br>        <span class="hljs-comment">// 获取Session</span><br>        <span class="hljs-type">Session</span> <span class="hljs-variable">session</span> <span class="hljs-operator">=</span> sessionFactory.openSession();<br><br>        <span class="hljs-type">People</span> <span class="hljs-variable">people</span> <span class="hljs-operator">=</span> session.get(People.class,<span class="hljs-number">3</span>);<br>        people.setMoney(<span class="hljs-number">2000.0</span>);<br><br>        session.saveOrUpdate(people);<br>        session.beginTransaction().commit();<br>        session.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/skaifeng/picgo/raw/master/img/202111041152157.png" alt="image-20211012185028700"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">class</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;com.kai.pojo.People&quot;</span> <span class="hljs-attr">table</span>=<span class="hljs-string">&quot;people&quot;</span> <span class="hljs-attr">dynamic-insert</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">dynamic-update</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/skaifeng/picgo/raw/master/img/202111041152112.png" alt="image-20211012185156623"></p><ul><li>where：查询时给 SQL 语句添加 where 条件</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kai.test;<br><br><span class="hljs-keyword">import</span> com.kai.pojo.People;<br><span class="hljs-keyword">import</span> org.hibernate.Session;<br><span class="hljs-keyword">import</span> org.hibernate.SessionFactory;<br><span class="hljs-keyword">import</span> org.hibernate.cfg.Configuration;<br><span class="hljs-keyword">import</span> org.hibernate.query.Query;<br><br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Test7</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">// 创建Configuration</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">configuration</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>().configure();<br>        <span class="hljs-comment">// 获取SessionFactory</span><br>        <span class="hljs-type">SessionFactory</span> <span class="hljs-variable">sessionFactory</span> <span class="hljs-operator">=</span> configuration.buildSessionFactory();<br>        <span class="hljs-comment">// 获取Session</span><br>        <span class="hljs-type">Session</span> <span class="hljs-variable">session</span> <span class="hljs-operator">=</span> sessionFactory.openSession();<br><br>        <span class="hljs-type">String</span> <span class="hljs-variable">hql</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;from People&quot;</span>;<br>        <span class="hljs-type">Query</span> <span class="hljs-variable">query</span> <span class="hljs-operator">=</span> session.createQuery(hql);<br>        List&lt;People&gt; list = query.list();<br>        <span class="hljs-keyword">for</span> (People people: list)&#123;<br>            System.out.println(people);<br>        &#125;<br><br>        session.beginTransaction().commit();<br>        session.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/skaifeng/picgo/raw/master/img/202111041152316.png" alt="image-20211012190030025"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">class</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;com.kai.pojo.People&quot;</span> <span class="hljs-attr">table</span>=<span class="hljs-string">&quot;people&quot;</span> <span class="hljs-attr">dynamic-insert</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">dynamic-update</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">where</span>=<span class="hljs-string">&quot;id = 1&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/skaifeng/picgo/raw/master/img/202111041152939.png" alt="image-20211012190140330"></p><h3 id="id-属性"><a href="#id-属性" class="headerlink" title="id 属性"></a>id 属性</h3><ul><li>name：实体类的属性名</li><li>type：实体类属性的数据类型</li></ul><p>此处可以设置两种类型的数据：Java数据类型 或者 Hibernate 映射类型</p><p>实体类的属性数据类型必须与数据表对应的字段数据类型一致：</p><p>int 对应 int，String 对应 varchar</p><p>如何进行映射？</p><p>Java数据类型映射到 hibernate 映射类型，再由 hibernate 映射类型映射到 SQL 的数据类型</p><p>Java —》 Hibernate —》 SQL</p><ul><li>column：数据表的主键字段名</li><li>generator：主键的生成策略<ol><li>hilo 算法</li><li>increment：Hibernate 自增</li><li>identity：数据库自增</li><li>native：本地策略，根据底层数据库自动选择主键的生成策略</li><li>uuid.hex 算法</li><li>select 算法</li></ol></li></ul><h3 id="property-属性"><a href="#property-属性" class="headerlink" title="property 属性"></a>property 属性</h3><ul><li>name：实体类的属性名</li><li>column：数据表的字段名</li><li>type：数据类型</li><li>update：该字段是否可以修改，默认为 true</li><li>insert：该字段是否可以添加，默认为 true</li><li>lazy：延迟加载策略</li></ul><h3 id="实体关系映射文件属性"><a href="#实体关系映射文件属性" class="headerlink" title="实体关系映射文件属性"></a>实体关系映射文件属性</h3><ul><li><p>inverse</p><ul><li><p>Customer 和 Orders 是一对多的关系，一个Customer 对应多个 Orders，实体类当中用一个集合来表示对应的 Orders</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kai.pojo;<br><br><span class="hljs-keyword">import</span> lombok.Getter;<br><span class="hljs-keyword">import</span> lombok.Setter;<br><br><span class="hljs-keyword">import</span> java.util.Set;<br><br><span class="hljs-meta">@Getter</span><br><span class="hljs-meta">@Setter</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Customer</span> &#123;<br>    <span class="hljs-keyword">private</span> Integer id;<br>    <span class="hljs-keyword">private</span> String name;<br>    <span class="hljs-keyword">private</span> Set&lt;Orders&gt; orders;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Customer&#123;&quot;</span> +<br>                <span class="hljs-string">&quot;id=&quot;</span> + id +<br>                <span class="hljs-string">&quot;, name=&#x27;&quot;</span> + name + <span class="hljs-string">&#x27;\&#x27;&#x27;</span> +<br>                <span class="hljs-string">&#x27;&#125;&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>Customer.hbm.xml 中使用 set 标签来配置映射关系</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">hibernate-mapping</span> <span class="hljs-keyword">PUBLIC</span></span><br><span class="hljs-meta">        <span class="hljs-string">&quot;-//Hibernate/Hibernate Mapping DTD//EN&quot;</span></span><br><span class="hljs-meta">        <span class="hljs-string">&quot;http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hibernate-mapping</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">class</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;com.kai.pojo.Customer&quot;</span> <span class="hljs-attr">table</span>=<span class="hljs-string">&quot;customer&quot;</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--主键映射--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">id</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;id&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;java.lang.Integer&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">column</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;id&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">column</span>&gt;</span><br>            <span class="hljs-comment">&lt;!--自增--&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">generator</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;identity&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">generator</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;name&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;java.lang.String&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">column</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;name&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">column</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">set</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;orders&quot;</span> <span class="hljs-attr">table</span>=<span class="hljs-string">&quot;orders&quot;</span> <span class="hljs-attr">lazy</span>=<span class="hljs-string">&quot;extra&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">key</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;cid&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">key</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">one-to-many</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.kai.pojo.Orders&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">one-to-many</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">set</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">class</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">hibernate-mapping</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kai.pojo;<br><br><span class="hljs-keyword">import</span> lombok.Getter;<br><span class="hljs-keyword">import</span> lombok.Setter;<br><br><span class="hljs-meta">@Getter</span><br><span class="hljs-meta">@Setter</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Orders</span> &#123;<br>    <span class="hljs-keyword">private</span> Integer id;<br>    <span class="hljs-keyword">private</span> String name;<br>    <span class="hljs-keyword">private</span> Customer customer;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Orders&#123;&quot;</span> +<br>                <span class="hljs-string">&quot;id=&quot;</span> + id +<br>                <span class="hljs-string">&quot;, name=&#x27;&quot;</span> + name + <span class="hljs-string">&#x27;\&#x27;&#x27;</span> +<br>                <span class="hljs-string">&#x27;&#125;&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">hibernate-mapping</span> <span class="hljs-keyword">PUBLIC</span></span><br><span class="hljs-meta">        <span class="hljs-string">&quot;-//Hibernate/Hibernate Mapping DTD//EN&quot;</span></span><br><span class="hljs-meta">        <span class="hljs-string">&quot;http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hibernate-mapping</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">class</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;com.kai.pojo.Orders&quot;</span> <span class="hljs-attr">table</span>=<span class="hljs-string">&quot;orders&quot;</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--主键映射--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">id</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;id&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;java.lang.Integer&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">column</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;id&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">column</span>&gt;</span><br>            <span class="hljs-comment">&lt;!--自增--&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">generator</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;identity&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">generator</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;name&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;java.lang.String&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">column</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;name&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">column</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">many-to-one</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;customer&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.kai.pojo.Customer&quot;</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;cid&quot;</span> <span class="hljs-attr">lazy</span>=<span class="hljs-string">&quot;proxy&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">many-to-one</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">class</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">hibernate-mapping</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kai.test;<br><br><span class="hljs-keyword">import</span> com.kai.pojo.Customer;<br><span class="hljs-keyword">import</span> com.kai.pojo.Orders;<br><span class="hljs-keyword">import</span> org.hibernate.Session;<br><span class="hljs-keyword">import</span> org.hibernate.SessionFactory;<br><span class="hljs-keyword">import</span> org.hibernate.cfg.Configuration;<br><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Test8</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">// 创建Configuration</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">configuration</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>().configure();<br>        <span class="hljs-comment">// 获取SessionFactory</span><br>        <span class="hljs-type">SessionFactory</span> <span class="hljs-variable">sessionFactory</span> <span class="hljs-operator">=</span> configuration.buildSessionFactory();<br>        <span class="hljs-comment">// 获取Session</span><br>        <span class="hljs-type">Session</span> <span class="hljs-variable">session</span> <span class="hljs-operator">=</span> sessionFactory.openSession();<br><br>        <span class="hljs-type">Customer</span> <span class="hljs-variable">customer</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Customer</span>();<br>        customer.setName(<span class="hljs-string">&quot;李四&quot;</span>);<br><br>        <span class="hljs-type">Orders</span> <span class="hljs-variable">orders1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Orders</span>();<br>        orders1.setName(<span class="hljs-string">&quot;订单2&quot;</span>);<br>        orders1.setCustomer(customer);<br><br>        <span class="hljs-type">Orders</span> <span class="hljs-variable">orders2</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Orders</span>();<br>        orders2.setName(<span class="hljs-string">&quot;订单2&quot;</span>);<br>        orders2.setCustomer(customer);<br><br>        session.save(customer);<br>        session.save(orders1);<br>        session.save(orders2);<br><br>        session.beginTransaction().commit();<br>        session.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/skaifeng/picgo/raw/master/img/202111041152957.png" alt="image-20211012192041227"></p><p><del>===================================================================================</del></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kai.test;<br><br><span class="hljs-keyword">import</span> com.kai.pojo.Customer;<br><span class="hljs-keyword">import</span> com.kai.pojo.Orders;<br><span class="hljs-keyword">import</span> org.hibernate.Session;<br><span class="hljs-keyword">import</span> org.hibernate.SessionFactory;<br><span class="hljs-keyword">import</span> org.hibernate.cfg.Configuration;<br><br><span class="hljs-keyword">import</span> java.util.HashSet;<br><span class="hljs-keyword">import</span> java.util.Set;<br><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Test8</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">// 创建Configuration</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">configuration</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>().configure();<br>        <span class="hljs-comment">// 获取SessionFactory</span><br>        <span class="hljs-type">SessionFactory</span> <span class="hljs-variable">sessionFactory</span> <span class="hljs-operator">=</span> configuration.buildSessionFactory();<br>        <span class="hljs-comment">// 获取Session</span><br>        <span class="hljs-type">Session</span> <span class="hljs-variable">session</span> <span class="hljs-operator">=</span> sessionFactory.openSession();<br><br>        <span class="hljs-type">Customer</span> <span class="hljs-variable">customer</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Customer</span>();<br>        customer.setName(<span class="hljs-string">&quot;李四&quot;</span>);<br><br>        <span class="hljs-type">Orders</span> <span class="hljs-variable">orders1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Orders</span>();<br>        orders1.setName(<span class="hljs-string">&quot;订单2&quot;</span>);<br>        orders1.setCustomer(customer);<br><br>        <span class="hljs-type">Orders</span> <span class="hljs-variable">orders2</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Orders</span>();<br>        orders2.setName(<span class="hljs-string">&quot;订单2&quot;</span>);<br>        orders2.setCustomer(customer);<br><br>        Set&lt;Orders&gt; orders = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashSet</span>&lt;Orders&gt;();<br>        orders.add(orders1);<br>        orders.add(orders2);<br>        customer.setOrders(orders);<br><br>        session.save(customer);<br>        session.save(orders1);<br>        session.save(orders2);<br><br>        session.beginTransaction().commit();<br>        session.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/skaifeng/picgo/raw/master/img/202111041153628.png" alt="image-20211012192435650"></p><p><img src="https://gitee.com/skaifeng/picgo/raw/master/img/202111041153772.png" alt="image-20211012192450916"></p><p><del>因为 Customer 和 Orders 都在维护一对多的关系，所以会重复设置主外建约束关系</del></p><p>如何避免这种情况？</p><ol><li>在Java代码中去掉一方维护关系代码</li><li>通过配置来解决</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- inverse=&quot;true&quot; 放弃维护--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">set</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;orders&quot;</span> <span class="hljs-attr">table</span>=<span class="hljs-string">&quot;orders&quot;</span> <span class="hljs-attr">lazy</span>=<span class="hljs-string">&quot;extra&quot;</span> <span class="hljs-attr">inverse</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">key</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;cid&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">key</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">one-to-many</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.kai.pojo.Orders&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">one-to-many</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">set</span>&gt;</span><br></code></pre></td></tr></table></figure><p>inverse 属性是用来设置是否将维护权交给对方，默认是 false，不交出维护权，双方都在维护，将它设置为 true，表示 Customer  放弃维护。</p><p><img src="https://gitee.com/skaifeng/picgo/raw/master/img/202111041153723.png" alt="image-20211012192844758"></p><h3 id="cascade：用来设置级联操作"><a href="#cascade：用来设置级联操作" class="headerlink" title="cascade：用来设置级联操作"></a>cascade：用来设置级联操作</h3><p>实体关系映射文件中设置 cascade 值完成级联删除</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--cascade=&quot;delete&quot; 级联删除--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">set</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;orders&quot;</span> <span class="hljs-attr">table</span>=<span class="hljs-string">&quot;orders&quot;</span> <span class="hljs-attr">lazy</span>=<span class="hljs-string">&quot;extra&quot;</span> <span class="hljs-attr">inverse</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">cascade</span>=<span class="hljs-string">&quot;delete&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">key</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;cid&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">key</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">one-to-many</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.kai.pojo.Orders&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">one-to-many</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">set</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="Hibernate-HQL"><a href="#Hibernate-HQL" class="headerlink" title="Hibernate HQL"></a>Hibernate HQL</h2><p>HQL: Hibernate Query Language，是 Hibernate框架提供的一种查询机制，它和SQL类似，不同的是HQL是面向对象的查询语句，让开发者能够以面向对象的思想来编写查询语句，对Java编程是一种很友好的方式。</p><p>HQL 不能直接参与数据库的交互，中间层语言</p><p>Java –》HQL –》hibernate –》SQL –》DB</p><p>HQL 只能完成查询、修改、删除，新增是无法操作的</p><h3 id="1、查询对象"><a href="#1、查询对象" class="headerlink" title="1、查询对象"></a>1、查询对象</h3><p>查询表中所有数据，自动完成对象的封装，返回List集合</p><p>HQL 进行查询，from 关键字后面不能有表名，必须写表对应的实体类名</p><p>from People</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kai.test;<br><br><span class="hljs-keyword">import</span> com.kai.pojo.Customer;<br><span class="hljs-keyword">import</span> com.kai.pojo.Orders;<br><span class="hljs-keyword">import</span> com.kai.pojo.People;<br><span class="hljs-keyword">import</span> org.hibernate.Session;<br><span class="hljs-keyword">import</span> org.hibernate.SessionFactory;<br><span class="hljs-keyword">import</span> org.hibernate.cfg.Configuration;<br><span class="hljs-keyword">import</span> org.hibernate.query.Query;<br><br><span class="hljs-keyword">import</span> java.util.HashSet;<br><span class="hljs-keyword">import</span> java.util.List;<br><span class="hljs-keyword">import</span> java.util.Set;<br><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Test9</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">// 创建Configuration</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">configuration</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>().configure();<br>        <span class="hljs-comment">// 获取SessionFactory</span><br>        <span class="hljs-type">SessionFactory</span> <span class="hljs-variable">sessionFactory</span> <span class="hljs-operator">=</span> configuration.buildSessionFactory();<br>        <span class="hljs-comment">// 获取Session</span><br>        <span class="hljs-type">Session</span> <span class="hljs-variable">session</span> <span class="hljs-operator">=</span> sessionFactory.openSession();<br><br>       <span class="hljs-type">String</span> <span class="hljs-variable">hql</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;from People&quot;</span>;<br>        <span class="hljs-type">Query</span> <span class="hljs-variable">query</span> <span class="hljs-operator">=</span> session.createQuery(hql);<br>        List&lt;People&gt; list = query.list();<br>        <span class="hljs-keyword">for</span>(People people:list)&#123;<br>            System.out.println(people);<br>        &#125;<br><br>        session.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/skaifeng/picgo/raw/master/img/202111041153036.png" alt="image-20211012211643636"></p><h3 id="2、分页查询"><a href="#2、分页查询" class="headerlink" title="2、分页查询"></a>2、分页查询</h3><p>HQL 分页查询可以通过调用query的方法来完成。</p><ol><li>setFirstResult()     设置起始下标</li><li>setMaxResult()     设置截取长度</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kai.test;<br><br><span class="hljs-keyword">import</span> com.kai.pojo.Customer;<br><span class="hljs-keyword">import</span> com.kai.pojo.Orders;<br><span class="hljs-keyword">import</span> com.kai.pojo.People;<br><span class="hljs-keyword">import</span> org.hibernate.Session;<br><span class="hljs-keyword">import</span> org.hibernate.SessionFactory;<br><span class="hljs-keyword">import</span> org.hibernate.cfg.Configuration;<br><span class="hljs-keyword">import</span> org.hibernate.query.Query;<br><br><span class="hljs-keyword">import</span> java.util.HashSet;<br><span class="hljs-keyword">import</span> java.util.List;<br><span class="hljs-keyword">import</span> java.util.Set;<br><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Test9</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">// 创建Configuration</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">configuration</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>().configure();<br>        <span class="hljs-comment">// 获取SessionFactory</span><br>        <span class="hljs-type">SessionFactory</span> <span class="hljs-variable">sessionFactory</span> <span class="hljs-operator">=</span> configuration.buildSessionFactory();<br>        <span class="hljs-comment">// 获取Session</span><br>        <span class="hljs-type">Session</span> <span class="hljs-variable">session</span> <span class="hljs-operator">=</span> sessionFactory.openSession();<br><br>       <span class="hljs-type">String</span> <span class="hljs-variable">hql</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;from People&quot;</span>;<br>        <span class="hljs-type">Query</span> <span class="hljs-variable">query</span> <span class="hljs-operator">=</span> session.createQuery(hql);<br>        query.setFirstResult(<span class="hljs-number">1</span>);<br>        query.setMaxResults(<span class="hljs-number">2</span>);<br>        List&lt;People&gt; list = query.list();<br>        <span class="hljs-keyword">for</span>(People people:list)&#123;<br>            System.out.println(people);<br>        &#125;<br><br>        session.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3、where-条件查询"><a href="#3、where-条件查询" class="headerlink" title="3、where 条件查询"></a>3、where 条件查询</h3><p>HQL 直接追加 where 关键字作为条件查询，与 SQL 没有区别</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kai.test;<br><br><span class="hljs-keyword">import</span> com.kai.pojo.Customer;<br><span class="hljs-keyword">import</span> com.kai.pojo.Orders;<br><span class="hljs-keyword">import</span> com.kai.pojo.People;<br><span class="hljs-keyword">import</span> org.hibernate.Session;<br><span class="hljs-keyword">import</span> org.hibernate.SessionFactory;<br><span class="hljs-keyword">import</span> org.hibernate.cfg.Configuration;<br><span class="hljs-keyword">import</span> org.hibernate.query.Query;<br><br><span class="hljs-keyword">import</span> java.util.HashSet;<br><span class="hljs-keyword">import</span> java.util.List;<br><span class="hljs-keyword">import</span> java.util.Set;<br><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Test9</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">// 创建Configuration</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">configuration</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>().configure();<br>        <span class="hljs-comment">// 获取SessionFactory</span><br>        <span class="hljs-type">SessionFactory</span> <span class="hljs-variable">sessionFactory</span> <span class="hljs-operator">=</span> configuration.buildSessionFactory();<br>        <span class="hljs-comment">// 获取Session</span><br>        <span class="hljs-type">Session</span> <span class="hljs-variable">session</span> <span class="hljs-operator">=</span> sessionFactory.openSession();<br><br>        <span class="hljs-type">String</span> <span class="hljs-variable">hql</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;from People where id = 1&quot;</span>;<br>        <span class="hljs-type">Query</span> <span class="hljs-variable">query</span> <span class="hljs-operator">=</span> session.createQuery(hql);<br>        <span class="hljs-type">People</span> <span class="hljs-variable">people</span> <span class="hljs-operator">=</span> (People) query.list().get(<span class="hljs-number">0</span>);<br>        System.out.println(people);<br><br>        session.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">query.list<span class="hljs-comment">()</span>返回一个集合，通过.get<span class="hljs-comment">(0)</span> 取出结果<br></code></pre></td></tr></table></figure><h3 id="4、模糊查询"><a href="#4、模糊查询" class="headerlink" title="4、模糊查询"></a>4、模糊查询</h3><p>查询名称包含三的记录</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kai.test;<br><br><span class="hljs-keyword">import</span> com.kai.pojo.Customer;<br><span class="hljs-keyword">import</span> com.kai.pojo.Orders;<br><span class="hljs-keyword">import</span> com.kai.pojo.People;<br><span class="hljs-keyword">import</span> org.hibernate.Session;<br><span class="hljs-keyword">import</span> org.hibernate.SessionFactory;<br><span class="hljs-keyword">import</span> org.hibernate.cfg.Configuration;<br><span class="hljs-keyword">import</span> org.hibernate.query.Query;<br><br><span class="hljs-keyword">import</span> java.util.HashSet;<br><span class="hljs-keyword">import</span> java.util.List;<br><span class="hljs-keyword">import</span> java.util.Set;<br><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Test9</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">// 创建Configuration</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">configuration</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>().configure();<br>        <span class="hljs-comment">// 获取SessionFactory</span><br>        <span class="hljs-type">SessionFactory</span> <span class="hljs-variable">sessionFactory</span> <span class="hljs-operator">=</span> configuration.buildSessionFactory();<br>        <span class="hljs-comment">// 获取Session</span><br>        <span class="hljs-type">Session</span> <span class="hljs-variable">session</span> <span class="hljs-operator">=</span> sessionFactory.openSession();<br><br>        <span class="hljs-type">String</span> <span class="hljs-variable">hql</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;from People where name like &#x27;%三%&#x27;&quot;</span>;<br>        <span class="hljs-type">Query</span> <span class="hljs-variable">query</span> <span class="hljs-operator">=</span> session.createQuery(hql);<br>        List&lt;People&gt; list = query.list();<br>        <span class="hljs-keyword">for</span>(People people:list)&#123;<br>            System.out.println(people);<br>        &#125;<br><br>        session.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/skaifeng/picgo/raw/master/img/202111041153049.png" alt="image-20211012212537295"></p><h3 id="5、order-by"><a href="#5、order-by" class="headerlink" title="5、order by"></a>5、order by</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kai.test;<br><br><span class="hljs-keyword">import</span> com.kai.pojo.Customer;<br><span class="hljs-keyword">import</span> com.kai.pojo.Orders;<br><span class="hljs-keyword">import</span> com.kai.pojo.People;<br><span class="hljs-keyword">import</span> org.hibernate.Session;<br><span class="hljs-keyword">import</span> org.hibernate.SessionFactory;<br><span class="hljs-keyword">import</span> org.hibernate.cfg.Configuration;<br><span class="hljs-keyword">import</span> org.hibernate.query.Query;<br><br><span class="hljs-keyword">import</span> java.util.HashSet;<br><span class="hljs-keyword">import</span> java.util.List;<br><span class="hljs-keyword">import</span> java.util.Set;<br><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Test9</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">// 创建Configuration</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">configuration</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>().configure();<br>        <span class="hljs-comment">// 获取SessionFactory</span><br>        <span class="hljs-type">SessionFactory</span> <span class="hljs-variable">sessionFactory</span> <span class="hljs-operator">=</span> configuration.buildSessionFactory();<br>        <span class="hljs-comment">// 获取Session</span><br>        <span class="hljs-type">Session</span> <span class="hljs-variable">session</span> <span class="hljs-operator">=</span> sessionFactory.openSession();<br><br>        <span class="hljs-type">String</span> <span class="hljs-variable">hql</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;from People order by id desc&quot;</span>;<br>        <span class="hljs-type">Query</span> <span class="hljs-variable">query</span> <span class="hljs-operator">=</span> session.createQuery(hql);<br>        List&lt;People&gt; list = query.list();<br>        <span class="hljs-keyword">for</span>(People people:list)&#123;<br>            System.out.println(people);<br>        &#125;<br><br>        session.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/skaifeng/picgo/raw/master/img/202111041153226.png" alt="image-20211012212708496"></p><h3 id="6、查询实体对象的属性"><a href="#6、查询实体对象的属性" class="headerlink" title="6、查询实体对象的属性"></a>6、查询实体对象的属性</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kai.test;<br><br><span class="hljs-keyword">import</span> com.kai.pojo.Customer;<br><span class="hljs-keyword">import</span> com.kai.pojo.Orders;<br><span class="hljs-keyword">import</span> com.kai.pojo.People;<br><span class="hljs-keyword">import</span> org.hibernate.Session;<br><span class="hljs-keyword">import</span> org.hibernate.SessionFactory;<br><span class="hljs-keyword">import</span> org.hibernate.cfg.Configuration;<br><span class="hljs-keyword">import</span> org.hibernate.query.Query;<br><br><span class="hljs-keyword">import</span> java.util.HashSet;<br><span class="hljs-keyword">import</span> java.util.List;<br><span class="hljs-keyword">import</span> java.util.Set;<br><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Test9</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">// 创建Configuration</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">configuration</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>().configure();<br>        <span class="hljs-comment">// 获取SessionFactory</span><br>        <span class="hljs-type">SessionFactory</span> <span class="hljs-variable">sessionFactory</span> <span class="hljs-operator">=</span> configuration.buildSessionFactory();<br>        <span class="hljs-comment">// 获取Session</span><br>        <span class="hljs-type">Session</span> <span class="hljs-variable">session</span> <span class="hljs-operator">=</span> sessionFactory.openSession();<br><br>        <span class="hljs-type">String</span> <span class="hljs-variable">hql</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;select name from People where id = 1&quot;</span>;<br>        <span class="hljs-type">Query</span> <span class="hljs-variable">query</span> <span class="hljs-operator">=</span> session.createQuery(hql);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span> (String)query.uniqueResult();<br>        System.out.println(name);<br><br>        session.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/skaifeng/picgo/raw/master/img/202111041153980.png" alt="image-20211012212851050"></p><h3 id="7、占位符"><a href="#7、占位符" class="headerlink" title="7、占位符"></a>7、占位符</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kai.test;<br><br><span class="hljs-keyword">import</span> com.kai.pojo.Customer;<br><span class="hljs-keyword">import</span> com.kai.pojo.Orders;<br><span class="hljs-keyword">import</span> com.kai.pojo.People;<br><span class="hljs-keyword">import</span> org.hibernate.Session;<br><span class="hljs-keyword">import</span> org.hibernate.SessionFactory;<br><span class="hljs-keyword">import</span> org.hibernate.cfg.Configuration;<br><span class="hljs-keyword">import</span> org.hibernate.query.Query;<br><br><span class="hljs-keyword">import</span> java.util.HashSet;<br><span class="hljs-keyword">import</span> java.util.List;<br><span class="hljs-keyword">import</span> java.util.Set;<br><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Test9</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">// 创建Configuration</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">configuration</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>().configure();<br>        <span class="hljs-comment">// 获取SessionFactory</span><br>        <span class="hljs-type">SessionFactory</span> <span class="hljs-variable">sessionFactory</span> <span class="hljs-operator">=</span> configuration.buildSessionFactory();<br>        <span class="hljs-comment">// 获取Session</span><br>        <span class="hljs-type">Session</span> <span class="hljs-variable">session</span> <span class="hljs-operator">=</span> sessionFactory.openSession();<br><br>        <span class="hljs-type">String</span> <span class="hljs-variable">hql</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;from People where name = :name&quot;</span>;<br>        <span class="hljs-type">Query</span> <span class="hljs-variable">query</span> <span class="hljs-operator">=</span> session.createQuery(hql);<br>        query.setString(<span class="hljs-string">&quot;name&quot;</span>,<span class="hljs-string">&quot;张三&quot;</span>);<br>        List&lt;People&gt; list = query.list();<br>        <span class="hljs-keyword">for</span>(People people:list)&#123;<br>            System.out.println(list);<br>        &#125;<br><br>        session.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/skaifeng/picgo/raw/master/img/202111041154740.png" alt="image-20211012213049755"></p><h3 id="8、级联查询"><a href="#8、级联查询" class="headerlink" title="8、级联查询"></a>8、级联查询</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kai.test;<br><br><span class="hljs-keyword">import</span> com.kai.pojo.Customer;<br><span class="hljs-keyword">import</span> com.kai.pojo.Orders;<br><span class="hljs-keyword">import</span> com.kai.pojo.People;<br><span class="hljs-keyword">import</span> org.hibernate.Session;<br><span class="hljs-keyword">import</span> org.hibernate.SessionFactory;<br><span class="hljs-keyword">import</span> org.hibernate.cfg.Configuration;<br><span class="hljs-keyword">import</span> org.hibernate.query.Query;<br><br><span class="hljs-keyword">import</span> java.util.HashSet;<br><span class="hljs-keyword">import</span> java.util.List;<br><span class="hljs-keyword">import</span> java.util.Set;<br><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Test9</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">// 创建Configuration</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">configuration</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>().configure();<br>        <span class="hljs-comment">// 获取SessionFactory</span><br>        <span class="hljs-type">SessionFactory</span> <span class="hljs-variable">sessionFactory</span> <span class="hljs-operator">=</span> configuration.buildSessionFactory();<br>        <span class="hljs-comment">// 获取Session</span><br>        <span class="hljs-type">Session</span> <span class="hljs-variable">session</span> <span class="hljs-operator">=</span> sessionFactory.openSession();<br><br>        <span class="hljs-type">String</span> <span class="hljs-variable">hql1</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;from Customer where name = :name&quot;</span>;<br>        <span class="hljs-type">Query</span> <span class="hljs-variable">query1</span> <span class="hljs-operator">=</span> session.createQuery(hql1);<br>        query1.setString(<span class="hljs-string">&quot;name&quot;</span>,<span class="hljs-string">&quot;张三&quot;</span>);<br>        <span class="hljs-type">Customer</span> <span class="hljs-variable">customer</span> <span class="hljs-operator">=</span> (Customer)query1.uniqueResult();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">hql2</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;from Orders where customer = :customer&quot;</span>;<br>        <span class="hljs-type">Query</span> <span class="hljs-variable">query2</span> <span class="hljs-operator">=</span> session.createQuery(hql2);<br>        query2.setEntity(<span class="hljs-string">&quot;customer&quot;</span>,customer);<br>        List&lt;Orders&gt; list = query2.list();<br>        <span class="hljs-keyword">for</span>(Orders orders:list)&#123;<br>            System.out.println(orders);<br>        &#125;<br><br>        session.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/skaifeng/picgo/raw/master/img/202111041154769.png" alt="image-20211012213448036"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
